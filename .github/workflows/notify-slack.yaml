name: Notify Slack

on:
  push: # Runs on merge (push) to $branch
    branches:
      - notify-slack
concurrency:
  # Only allow one workflow in the 'main' group to run at a time. Others will queue up
  # https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#concurrency
  group: main

jobs:
  branch-build:
    name: Main Branch Build
    runs-on: ubuntu-latest
    outputs:
      all-files: ${{ steps.build.outputs.all-files }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/branch-build
        id: build
        with:
          packages-access-token: ${{ secrets.PACKAGES_ACCESS_TOKEN }}
  log-github-context:
    name: Log github context
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "$GITHUB_CONTEXT"
          echo Yar Pirate Ipsum
          echo Before sha: ${{ $GITHUB_CONTEXT.event.before }}
          echo After sha: ${{ $GITHUB_CONTEXT.event.after }}
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}

  changed-files:
    name: Changed Files
    needs: [branch-build]
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo Changed files information
          echo All Files:  ${{ needs.branch-build.outputs.all-files }}
          echo Package lock: ${{ needs.branch-build.outputs.package-lock-change }}
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
  check-package-lock:
    name: Check package-lock changes
    needs: [branch-build]
    runs-on: ubuntu-latest
    steps:
      - name: Contains changes
        if: ${{ contains(env.ALL-FILES, 'package-lock.json') && always() }}
        run: echo PACKAGE_LOCK_CHANGES
        shell: bash
        env:
          ALL-FILES: ${{ needs.branch-build.outputs.all-files}}
      - name: Nothing
        if: ${{ !contains(env.ALL-FILES, 'package-lock.json') && always() }}
        run: echo No changes found
        shell: bash
        env:
          ALL-FILES: ${{ needs.branch-build.outputs.all-files}}
